// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

	static int keyboardAddress;
	static int colsNum;
	
    /** Initializes the keyboard. */
    function void init() {
		
		let keyboardAddress = 24576;
		let colsNum = 64;
		
		return;
    } 

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, as well as the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
		var int key;
		let key = Memory.peek(keyboardAddress);
		if(key < 153) {
			return key;
		}
		return 0;
    }

    /**								
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
		
		var int key;
		var int c;
		let key = 0;
		
		while(key = 0) {
			let key = Keyboard.keyPressed();
		}
		
		let c = key;
		
		while(key = c) {
			let key = Keyboard.keyPressed();
		}
		
		if(c = String.newLine()) {
			do Output.println();
		} else {	
			if((c > 31) & (c < 128)) {
				do Output.printChar(c);
			}
		}
	
		return c;
		
    }

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its value.
     */
    function String readLine(String message) {
		
		
		var char c;
		var String s;
		var int cursor;
		
		let cursor = 0;
		let s = String.new(colsNum);
		
		do Output.printString(message);
		
		while(true) {
			
			let c = Keyboard.readChar();
		
			if(c = String.newLine()) {
				do Output.println();
				return s;
			}
			
			if((c = String.backSpace()) & (cursor > 0)) {
				do s.eraseLastChar();
				do Output.backSpace();
				let cursor = cursor - 1;
			
			} else {
				if((c > 31) & (c < 128)) {
					do s.appendChar(c);
					let cursor = cursor + 1;
				}
			}
			
		}
		
		return s;
    }   

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
		
		var String s;
		let s = Keyboard.readLine(message);
		
		return s.intValue();
		
    }
}
